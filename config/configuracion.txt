Cosas de documentacion o cosas que he hecho para el setup de ROS

IDE de desarrollo:
    Git
    Github
    Visual Studio Code + Plugin de ROS
    Consola Bash

Instalacion del entorno:
    -Instalar distribucion Ubuntu Xenial
    -Instalar los paquetes necesarios para ROS Kinetic
    -Instalar los paquetes necesarios para el turtlebot (http://wiki.ros.org/turtlebot/Tutorials/indigo/Turtlebot%20Installation)
        Necesarios los pasos dentro de este link? https://answers.ros.org/question/246015/installing-turtlebot-on-ros-kinetic/
        (No estoy seguro)
    (SCRIPT)
    -Cambiar la variable de entorno del sensor 3D por la adecuada para el sensor kinect << export TURTLEBOT_3D_SENSOR=kinect>>
    -Para la visualizacion, hacer uso del archivo de configuracion rviz_config.rviz
    -Para la conexion entre turtlebot y servidor, seguir los pasos contenidos en este link (http://wiki.ros.org/turtlebot/Tutorials/indigo/Network%20Configuration)
    asi el turtlebot actuara como node master y se haran las conexiones ssh correspondientes.
    -Para que los ordenadores conozcan la resolucion de los hostnames, en los archivos /etc/hosts de cada maquina introduciremos
    la IP del otro equipo (si estamos en el servidor, introduciremos la de la tortuga y viceversa) junto a su hostname 
    -Para poder hacer un roslaunch desde el servidor en el cliente mediante ssh tenemos que añadir en el .bashrc del cliente
    el comando << export DISPLAY=:0  >>
    -Quitadas las carpetas build y devel del repositorio git para que asi no haya problemas al clonar repositorios en otra 
    maquina. Eso si, ahora tendremos que hacer un catkin_make tras clonar

Desarrollo del paquete:
    -Ahora CMAkeLists.txt tiene un findPAckage(OpenCV)
    -Añadidas las dependencias en package.xml con opencv y cv_bridge
    -Recordar hacer un chmod +x filename para que se pueda ejecutar dicho script

Comandos a utilizar:
    -Para poner en marcha el follower << roslaunch turtlebot_gazebo turtlebot_world.launch $HOME/turtlebot-vision/worlds/yellow.world >>
    -Para utilizar frameAnalyzerCompressed hay que antes ejecutar imageRepublisher 
