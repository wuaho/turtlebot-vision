Diario de trabajo para el TFG realizado por Juan Jose Requena Lama


27 de Febrero

Los drivers que creo que son los adecuados (http://wiki.ros.org/depth_image_proc)
drivers para microsoft kinect openni camera (http://wiki.ros.org/openni_camera) y openni_launch (http://wiki.ros.org/openni_launch)
Para unir opencv con ros (http://wiki.ros.org/vision_opencv)

Desconozco si tengo que instalar drivers y ejecutar archivos .launch para que la kinect publique topics  para la nube de puntos

28 de Febrero 

Instalado turtlebot en el portatil, voy a intentar que el portatil simule un turtlebot y desde el servidor se suscriba a
un topic que publique el servicio simulado de mi portatil.
Cambiadas las variables del sistema.
Creado el fichero scriptVariables.sh, la intencion de este script es que te introduzca las variables del sistema que 
necesitamos para nuestro entorno. 
Configurado ya pc y portatil para simular al robot tortuga.

Comprobado que, el roscore se ejecuta en el portatil, es decir, en la tortuga, ya que si no fuese asi me habria dejado 
publicar en un topic sin problema alguno, ejecutando por su cuenta un roscore pero en cambio, me ha aparecido un mensaje 
de que no podia conectarse con ROS MASTER URI. 

1 de Marzo

Ahora en los archivos .bashrc aparecen los exports indicados para conseguir la conectividad entre servidor y robot tortuga.
Habria que conseguir que dichos export utilizasen los hostname, en vez de las IPs.

He mirado en la configuracion que quizas si los demas ordenadores no saben resolver el hostname, puede dar problemas segun 
los ejemplos de esta pagina http://wiki.ros.org/ROS/NetworkSetup . 
Cambiando las variables $ROS_HOSTNAME por IPs ahora ya no dan problemas.

2 de Marzo

El topic que crea una Point Cloud es el /camera/depth/points y los mensajes son del tipo sensor_msgs/PointCloud2 .
Hay que ver si el topic es publicado asi por defecto o es accion del rviz. 

¿REALMENTE NECESITO UNA NUBE DE PUNTOS? ¿QUE BENEFICIOS ME PUEDE DAR PARA LO QUE QUIERO HACER?

Estoy aprendiendo a cómo configurar las dependencias de un paquete correctamente modificando su fichero package.xml
Hay mucha informacion, pero en caso de duda, hacer uso del <depend> y ya esta. Ya que esto solo sirve para que otros puedan 
descargar e instalar nuestro paquete correctamente.
Conclusion: solo necesito modificar package.xml y a no ser que haga un nuevo mensaje o servicio, no tocar el CMakeLists.txt .

Quizas el uso de rostopic hz nos puede hacer ver el momento en el que llega el paquete y asi calcular el tiempo y demas.

Para la proxima sesion, hacer un script sencillito de python como en el que viene en el libro o aun mas sencillo para probar
que las dependencias funcionan correctamente. Tras ello, hacer otro donde se utilice la camara y se vea lo que muestra.

3 de Marzo

Cambiada la variable $ROS_MASTER_URI para las pruebas en servidor

rostopic hz TOPIC para saber como de rapido estan llegando los mensajes de un topic. EL resultado pricipal es mensajes 
por segundo.

http://wiki.ros.org/pcl_ros/Tutorials/CloudToImage te enseña como convertir un pointcloud a una imagen y funciona realmente.
Pero creo que eso no es eficiente, es decir, entonces para que queremos la pointcloud si la vamos a convertir en una imagen...

Asi que, por una parte tengo que hacer un codigo que se suscriba a la pointcloud y de ahi, descubrir como puedo utilizarla 
para la computer vision.